#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ Docker –æ–±—Ä–∞–∑–∞ –¥–ª—è Bybit Trading Bot
set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
REGISTRY="ghcr.io"
REPO_OWNER=${GITHUB_REPOSITORY_OWNER:-$(git config --get remote.origin.url | sed -n 's#.*/\([^/]*\)/.*#\1#p')}
REPO_NAME=${GITHUB_REPOSITORY##*/}
if [ -z "$REPO_NAME" ]; then
    REPO_NAME=$(basename "$(git rev-parse --show-toplevel)" 2>/dev/null || echo "bybit-bot")
fi
IMAGE_NAME="$REPO_OWNER/$REPO_NAME"
VERSION=${1:-$(date +%Y%m%d-%H%M%S)}
FULL_IMAGE_NAME="$REGISTRY/$IMAGE_NAME:$VERSION"
LATEST_IMAGE_NAME="$REGISTRY/$IMAGE_NAME:latest"

echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞: $FULL_IMAGE_NAME"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Dockerfile
if [[ ! -f "Dockerfile" ]]; then
    echo "‚ùå Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ requirements.txt
if [[ ! -f "requirements.txt" ]]; then
    echo "‚ùå requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
echo "üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞..."
docker build \
    --tag "$FULL_IMAGE_NAME" \
    --tag "$LATEST_IMAGE_NAME" \
    --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
    --build-arg VCS_REF=$(git rev-parse --short HEAD 2>/dev/null || echo "unknown") \
    --build-arg VERSION="$VERSION" \
    .

echo "‚úÖ –û–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–±—Ä–∞–∑–∞
echo "üìä –†–∞–∑–º–µ—Ä –æ–±—Ä–∞–∑–∞:"
docker images "$FULL_IMAGE_NAME" --format "table {{.Repository}}:{{.Tag}}\t{{.Size}}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ GitHub Registry
echo "üîê –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ GitHub Container Registry..."
if ! docker info | grep -q "ghcr.io"; then
    echo "‚ö†Ô∏è  –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ ghcr.io"
    echo "üí° –î–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   echo \$GITHUB_TOKEN | docker login ghcr.io -u \$GITHUB_USERNAME --password-stdin"
    echo "   –∏–ª–∏"
    echo "   docker login ghcr.io"
fi

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø—É—à–∏–º –≤ registry
read -p "üöÄ –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—Ä–∞–∑ –≤ GitHub Container Registry? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—Ä–∞–∑ –≤ GitHub Container Registry..."
    
    # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å
    if docker push "$FULL_IMAGE_NAME" && docker push "$LATEST_IMAGE_NAME"; then
        echo "‚úÖ –û–±—Ä–∞–∑ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ registry!"
        
        echo ""
        echo "üìã –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Kubernetes –¥–µ–ø–ª–æ—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
        echo "kubectl set image deployment/bybit-bot bybit-bot=$FULL_IMAGE_NAME -n trading"
        echo ""
        echo "üîó –û–±—Ä–∞–∑ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:"
        echo "   $FULL_IMAGE_NAME"
        echo "   $LATEST_IMAGE_NAME"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—Ä–∞–∑–∞!"
        echo "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ GitHub Container Registry"
    fi
fi

echo "üéâ –ì–æ—Ç–æ–≤–æ! –û–±—Ä–∞–∑: $FULL_IMAGE_NAME"
