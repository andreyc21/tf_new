#!/bin/bash

# –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è Bybit Trading Bot
set -e

# –¶–≤–µ—Ç–∞
BLUE='\033[0;34m'
GREEN='\033[0;32m'
NC='\033[0m'

info() { echo -e "${BLUE}[INFO]${NC} $1"; }
success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
show_help() {
    echo "üöÄ Bybit Trading Bot - –î–µ–ø–ª–æ–π"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh [COMMAND]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  docker         –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Docker Compose (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)"
    echo "  build [TAG]    –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞"
    echo "  k8s            –î–µ–ø–ª–æ–π –≤ Kubernetes (–ø—Ä–æ–¥–∞–∫—à–µ–Ω)"
    echo "  help           –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  ./deploy.sh docker          # –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞"
    echo "  ./deploy.sh build v1.0.0    # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞"
    echo "  ./deploy.sh k8s             # –ü—Ä–æ–¥–∞–∫—à–µ–Ω"
}

case "${1:-help}" in
    docker)
        info "üê≥ –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Docker Compose..."
        
        if [[ ! -f ".env" ]]; then
            if [[ -f "env.example" ]]; then
                info "üìù –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
                cp env.example .env
                echo "‚ö†Ô∏è  –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ API –∫–ª—é—á–∞–º–∏!"
            else
                echo "‚ùå –§–∞–π–ª env.example –Ω–µ –Ω–∞–π–¥–µ–Ω!"
                exit 1
            fi
        fi
        
        docker-compose up -d
        success "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!"
        info "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
        info "   docker-compose logs -f bybit-bot  # –õ–æ–≥–∏"
        info "   curl http://localhost:8080/health # Health check"
        info "   open http://localhost:8081        # –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ª–æ–≥–æ–≤"
        ;;
        
    build)
        info "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
        ./deploy/build.sh ${2:-latest}
        ;;
        
    k8s)
        info "‚ò∏Ô∏è  –î–µ–ø–ª–æ–π –≤ Kubernetes..."
        ./deploy/deploy-k8s.sh
        ;;
        
    help|--help|-h)
        show_help
        ;;
        
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        echo ""
        show_help
        exit 1
        ;;
esac
